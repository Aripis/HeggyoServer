# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Institution {
  createdAt: Date!
  updatedAt: Date!
  id: ID!
  name: String!
  email: String!
  type: InstitutionType!
  capacityPerClass: Int
  educationalStage: EducationStage!
  alias: String!
}

"""Date custom scalar type"""
scalar Date

enum InstitutionType {
  TECHNOLOGICAL
  MATHEMATICAL
  NATURAL_MATHEMATICAL
  HUMANITARIAN
  ART
  LINGUISTICAL
  SU
  OU
}

enum EducationStage {
  ELEMENTARY
  PRIMARY
  UNITED
  HIGH
  SECONDARY
}

type User {
  createdAt: Date!
  updatedAt: Date!
  id: ID!
  firstName: String!
  middleName: String!
  lastName: String!
  email: String!
  password: String!
  userRole: UserRoles!
  registerToken: String
  status: UserStatus!
  institution: Institution
}

enum UserRoles {
  ADMIN
  PARENT
  STUDENT
  TEACHER
  VIEWER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
  UNVERIFIED
}

type Teacher {
  id: ID!
  user: User!
  education: String
  yearsExperience: Int!
  contractType: ContractType
  teacherToken: String!
}

enum ContractType {
  PART_TIME
  FULL_TIME
}

type Token {
  accessToken: String!
  refreshToken: String
}

type Class {
  id: ID!
  forYear: Int!
  totalStudentCount: Int!
  classTeacher: Teacher!
  classLetter: String!
  classNumber: Int!
  classToken: String!
  registerTokenStatus: TokenStatus!
}

enum TokenStatus {
  ACTIVE
  INACTIVE
}

type Student {
  id: ID!
  user: User!
  startDate: Date
  class: Class
  prevEducation: String!
  studentToken: String!
  parents: [Parent!]
}

type Parent {
  id: ID!
  user: User!
  children: [Student!]!
}

type Query {
  user(id: String!): User!
  users: [User!]!
  profile: User!
  login(loginData: LoginInput!): User!
  token: Token!
  institutionById(id: String!): Institution!
  institutionByEmail(email: String!): Institution!
  institutionAlias(id: String!): String!
  institutions: [Institution!]!
  teacher(id: String!): Teacher!
  teachers: [Teacher!]!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  register(userData: CreateUserInput!): User!
  removeUser(id: String!): Boolean!
  updateUser(userData: UpdateUserInput!): User!
  addInstitution(newInstitutionData: InstitutionInput!): Institution!
  removeInstitution(id: String!): Boolean!
  updateTeacher(teacherData: TeacherInput!): Teacher!
}

input CreateUserInput {
  firstName: String!
  middleName: String!
  lastName: String!
  email: String!
  password: String!
  registerToken: String
}

input UpdateUserInput {
  id: String!
  firstName: String
  middleName: String
  lastName: String
  email: String
  password: String
  userRole: UserRoles
}

input InstitutionInput {
  name: String!
  email: String!
  type: InstitutionType!
  capacityPerClass: Int
  educationalStage: EducationStage!
  alias: String!
}

input TeacherInput {
  education: String
  yearsExperience: Int
  contractType: ContractType
  teacherToken: String!
}
